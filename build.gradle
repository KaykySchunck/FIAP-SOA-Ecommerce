plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'

    // ——— NEW ———
    id 'jacoco'
    id 'io.gitlab.arturbosch.detekt' version '1.23.6'
    id 'org.jlleitschuh.gradle.ktlint' version '12.1.0'
}

group = 'br.com.fiap'
version = '0.0.1-SNAPSHOT'
description = 'ECommerce'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Detekt extra (regras de formatação do ktlint dentro do detekt)
    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:1.23.6")
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy(tasks.jacocoTestReport) // gera cobertura após testes
}

// ——— NEW: JaCoCo ———
jacoco {
    toolVersion = "0.8.12"
}

tasks.register('quality') {
    group = "verification"
    description = "Run kotlin linters and tests"
    dependsOn 'ktlintCheck', 'detekt', 'test'
}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

// (opcional) Gate de cobertura — ajuste o mínimo e descomente quando quiser quebrar PR por baixa cobertura
// tasks.register('jacocoCoverageVerification', JacocoCoverageVerification) {
//     dependsOn tasks.jacocoTestReport
//     violationRules {
//         rule {
//             element = 'BUNDLE'
//             limits {
//                 limit {
//                     counter = 'INSTRUCTION'
//                     value = 'COVEREDRATIO'
//                     minimum = 0.70 // 70% mínimo (ajuste conforme necessário)
//                 }
//             }
//         }
//     }
// }
// check.dependsOn tasks.jacocoCoverageVerification

// ——— NEW: Detekt ———
detekt {
    buildUponDefaultConfig = true
    allRules = false
    autoCorrect = false
    config = files("$rootDir/config/detekt/detekt.yml") // se não existir, usa defaults
    baseline = file("$rootDir/config/detekt/baseline.xml") // opcional
}

// ——— NEW: Ktlint ———
ktlint {
    ignoreFailures = false
    android = false
    reporters {
        reporter "plain"
        reporter "checkstyle"
    }
    filter {
        exclude("**/generated/**")
    }
}
