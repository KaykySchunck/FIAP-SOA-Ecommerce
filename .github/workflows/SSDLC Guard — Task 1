name: SSDLC Guard — Task 1 (Secure Coding)

on:
  pull_request:
    branches: [ "main", "master" ]
  push:
    branches: [ "feature/**", "fix/**" ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write   # necessário para publicar SARIF no Code Scanning

concurrency:
  group: ssdlc-task1-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_quality_tests:
    name: Build + Tests + Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Prepare Gradle
        run: |
            test -f gradlew && chmod +x gradlew || true
            sed -i 's/\r$//' gradlew || true

      - name: Build + Unit Tests + Coverage + Quality
        run: |
          ./gradlew clean build jacocoTestReport check --info

      - name: Upload reports (JUnit/Jacoco/Quality)
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-and-quality
          path: |
            **/build/reports/tests/**/*
            **/build/reports/jacoco/test/html/**/*
            **/build/reports/checkstyle/**/*
            **/build/reports/pmd/**/*
            **/build/reports/spotbugs/**/*
          if-no-files-found: ignore

  secret_scan_gitleaks:
    name: Secret Scan (Gitleaks) — gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --redact \
                --report-format sarif --report-path gitleaks.sarif
      - name: Upload SARIF (Gitleaks)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif

  sast_semgrep:
    name: SAST (Semgrep OWASP + Java/Spring) — gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Semgrep
        run: pipx install semgrep
      - name: Run Semgrep (fail on HIGH)
        run: |
          # Packs oficiais + regras locais se existir .semgrep.yml
          semgrep --config p/owasp-top-ten --config p/java --config .semgrep.yml \
                  --severity=ERROR --error \
                  --sarif --output semgrep.sarif
      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  sca_dependency_check:
    name: SCA (OWASP Dependency-Check) — report only
    runs-on: ubuntu-latest
    continue-on-error: true   # nesta tarefa, apenas reporta
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
      - name: Cache ODC data
        uses: actions/cache@v4
        with:
          path: ./.odc-data
          key: odc-data-v11-${{ runner.os }}-${{ hashFiles('**/build.gradle*','**/pom.xml','**/package-lock.json','**/gradle.lockfile','**/gradle/**') }}
          restore-keys: |
            odc-data-v11-${{ runner.os }}-
      - name: Prepare dirs
        run: mkdir -p .odc-data odc-reports
      - name: Dependency-Check (Docker)
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: |
          docker pull owasp/dependency-check:latest
          SUPP=""
          if [ -f security/dependency-check-suppression.xml ]; then
            SUPP="--suppression /src/security/dependency-check-suppression.xml"
          fi
          docker run --rm \
            -u "$(id -u):$(id -g)" \
            -e NVD_API_KEY="$NVD_API_KEY" \
            -v "$PWD":/src \
            -v "$PWD/.odc-data":/usr/share/dependency-check/data \
            -v "$PWD/odc-reports":/report \
            owasp/dependency-check:latest \
              --scan /src \
              --project "${{ github.repository }}@${{ github.sha }}" \
              --out /report \
              --format HTML --format JSON --format SARIF $SUPP || true
          ls -lah odc-reports || true
      - name: Upload SARIF (ODC)
        if: always() && hashFiles('odc-reports/dependency-check-report.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: odc-reports/dependency-check-report.sarif
          category: owasp-dependency-check
      - name: Upload artifacts (ODC)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: odc-reports
          path: |
            odc-reports/dependency-check-report.html
            odc-reports/dependency-check-report.json
            odc-reports/dependency-check-report.sarif
          if-no-files-found: warn
