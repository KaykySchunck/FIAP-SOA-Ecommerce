name: SCA - Snyk

on:
  push:
    branches: ["main", "CI-CD"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "15 4 * * 4"
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  snyk-sca:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Setup Snyk CLI
        uses: snyk/actions/setup@v4
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Make gradlew executable (if present)
        run: |
          if [ -f gradlew ]; then
            chmod +x ./gradlew
            sed -i 's/\r$//' ./gradlew
          fi

      # Gera SARIF p/ Code Scanning (falhas só no gate abaixo)
      - name: Snyk test (SARIF)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test \
            --all-projects \
            --detection-depth=4 \
            --severity-threshold=high \
            --sarif-file-output=snyk.sarif || true

      # Gera JSON pra gate de severidade
      - name: Snyk test (JSON p/ gate)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk test \
            --all-projects \
            --detection-depth=4 \
            --severity-threshold=low \
            --json-file-output=snyk.json || true

      - name: Upload SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

      - name: Ensure jq
        run: |
          if ! command -v jq >/dev/null; then
            sudo apt-get update && sudo apt-get install -y jq
          fi

      - name: Gate por severidade (High/Critical)
        run: |
          test -f snyk.json || { echo "snyk.json não encontrado"; exit 1; }
          HIGHS=$(jq '[.vulnerabilities[] | select(.severity=="high" or .severity=="critical")] | length' snyk.json)
          echo "High/Critical: $HIGHS"
          if [ "$HIGHS" -gt 0 ]; then
            echo "Falhando por High/Critical."
            exit 1
          fi

      # Snapshot na UI do Snyk (somente main)
      - name: Snyk monitor (main only)
        if: github.ref == 'refs/heads/main'
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk monitor --all-projects --detection-depth=4 \
            --project-environment=github-actions \
            --project-lifecycle=production || true


