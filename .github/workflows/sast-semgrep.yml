name: SAST - Semgrep (Kotlin/Spring)

on:
  pull_request:
  push:
    branches: [ "main", "master" ]

jobs:
  semgrep:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # publicar SARIF na aba Security
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Semgrep scan (OSS rules) -> SARIF
        uses: returntocorp/semgrep-action@v1
        with:
          entryPoint: scan
          args: >-
            --config p/owasp-top-ten
            --config p/secrets
            --config p/java
            --config p/kotlin
            --config p/spring
            --sarif
            --output semgrep.sarif
            --metrics=off
        # Importante: NÃO definir SEMGREP_APP_TOKEN aqui.
        # (Se quiser usar Semgrep Cloud, fazemos outro YAML.)

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

      # Gate opcional por severidade (falha se houver "ERROR" no SARIF)
      - name: Gate por severidade (ERROR)
        run: |
          if [ -f semgrep.sarif ]; then
            ERRORS=$(jq '[.runs[].results[] | select(.level=="error")] | length' semgrep.sarif)
            echo "Findings severidade ERROR: ${ERRORS}"
            test "${ERRORS}" -gt 0 && exit 1 || exit 0
          else
            echo "semgrep.sarif não encontrado"; exit 1
          fi
